// Code generated by goagen v1.1.0-dirty, command line:
// $ goagen
// --design=github.com/ztx/andra/example/design
// --out=$(GOPATH)/src/github.com/ztx/andra/example
// --version=v1.1.0-dirty
//
// API "entp": Model Helpers
//
// The content of this file is auto-generated, DO NOT MODIFY

package models

import (
	"context"
	"github.com/goadesign/goa"
	"github.com/jinzhu/gorm"
	"github.com/ztx/andra/example/app"
	"time"
)

// MediaType Retrieval Functions

// ListPrdetails returns an array of view: default.
func (m *PrLineDB) ListPrdetails(ctx context.Context, prID int) []*app.Prdetails {
	defer goa.MeasureSince([]string{"goa", "db", "prdetails", "listprdetails"}, time.Now())

	var native []*PrLine
	var objs []*app.Prdetails
	err := m.Db.Scopes(PrLineFilterByPr(prID, m.Db)).Table(m.TableName()).Find(&native).Error

	if err != nil {
		goa.LogError(ctx, "error listing PrLine", "error", err.Error())
		return objs
	}

	for _, t := range native {
		objs = append(objs, t.PrLineToPrdetails())
	}

	return objs
}

// PrLineToPrdetails loads a PrLine and builds the default view of media type Prdetails.
func (m *PrLine) PrLineToPrdetails() *app.Prdetails {
	prline := &app.Prdetails{}
	prline.ID = &m.ID
	prline.Price = &m.Price
	prline.Qty = &m.Qty
	prline.Sl = &m.Sl

	return prline
}

// OnePrdetails loads a PrLine and builds the default view of media type Prdetails.
func (m *PrLineDB) OnePrdetails(ctx context.Context, id *int, prID int) (*app.Prdetails, error) {
	defer goa.MeasureSince([]string{"goa", "db", "prdetails", "oneprdetails"}, time.Now())

	var native PrLine

	if err != nil && err != gorm.ErrRecordNotFound {
		goa.LogError(ctx, "error getting PrLine", "error", err.Error())
		return nil, err
	}

	view := *native.PrLineToPrdetails()
	return &view, err
}
