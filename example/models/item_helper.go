// Code generated by goagen v1.1.0-dirty, command line:
// $ goagen
// --design=github.com/ztx/andra/example/design
// --out=$(GOPATH)/src/github.com/ztx/andra/example
// --version=v1.1.0-dirty
//
// API "entp": Model Helpers
//
// The content of this file is auto-generated, DO NOT MODIFY

package models

import (
	"context"
	"github.com/goadesign/goa"
	"github.com/jinzhu/gorm"
	"github.com/ztx/andra/example/app"
	"time"
)

// MediaType Retrieval Functions

// ListItem returns an array of view: default.
func (m *ItemDB) ListItem(ctx context.Context) []*app.Item {
	defer goa.MeasureSince([]string{"goa", "db", "item", "listitem"}, time.Now())

	var native []*Item
	var objs []*app.Item
	err := m.Db.Scopes().Table(m.TableName()).Find(&native).Error

	if err != nil {
		goa.LogError(ctx, "error listing Item", "error", err.Error())
		return objs
	}

	for _, t := range native {
		objs = append(objs, t.ItemToItem())
	}

	return objs
}

// ItemToItem loads a Item and builds the default view of media type Item.
func (m *Item) ItemToItem() *app.Item {
	item := &app.Item{}
	item.Code = &m.Code
	item.ID = &m.ID
	item.Name = &m.Name
	item.Uom = &m.Uom

	return item
}

// OneItem loads a Item and builds the default view of media type Item.
func (m *ItemDB) OneItem(ctx context.Context, id *int) (*app.Item, error) {
	defer goa.MeasureSince([]string{"goa", "db", "item", "oneitem"}, time.Now())

	var native Item

	if err != nil && err != gorm.ErrRecordNotFound {
		goa.LogError(ctx, "error getting Item", "error", err.Error())
		return nil, err
	}

	view := *native.ItemToItem()
	return &view, err
}
